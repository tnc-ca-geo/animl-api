org: animl
app: animl
service: animl-api
# variablesResolutionMode: 20210326

plugins:
  # - serverless-offline-sqs   # TODO: figure out serverless-offline-sqs
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: us-west-2
  profile: animl
  environment:
    REGION: ${self:provider.region}
    STAGE: ${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:*
      Resource:
        - Fn::GetAtt:
            - inferenceQueue
            - Arn
    - Effect: Allow
      Action:
        - ses:SendEmail
        - ses:SendRawEmail
      Resource: "*"
    - Effect: Allow
      Action:
        - ssm:GetParameters
      Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*

  # Only necessary for private endpoints
  # apiKeys:
  #   - name: lambdaApolloKey
  #     value: ${env:APOLLO_LAMBDA_KEY}

functions:
  graphql:
    handler: src/api/handler.server
    events:
    - http:
        path: /
        method: post
        cors: true
        authorizor:
          arn: arn:aws:cognito-idp:us-west-2:830244800171:userpool/us-west-2_9JixUpkYT
    timeout: 20
  playground:
    handler: src/api/handler.playground
    events:
    - http:
        path: /
        method: get
        cors: true
        authorizor:
          arn: arn:aws:cognito-idp:us-west-2:830244800171:userpool/us-west-2_9JixUpkYT
    timeout: 20
  inference:
    handler: src/ml/handler.inference
    reservedConcurrency: 10 # max number of lambdas to invoke at one time
    events:
      - eventBridge:
          schedule: rate(5 minutes)
      # - sqs:
      #     arn:
      #       Fn::GetAtt:
      #         - inferenceQueue
      #         - Arn
      #     batchSize: 1
    timeout: 120

resources:
  Resources:
    inferenceQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: inferenceQueue-${self:provider.stage}
        RedrivePolicy:
          deadLetterTargetArn:
            "Fn::GetAtt":
              - inferenceDeadLetterQueue
              - Arn
          maxReceiveCount: 5
    inferenceDeadLetterQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: inferenceDLQ-${self:provider.stage}
        MessageRetentionPeriod: 1209600 # 14 days in seconds