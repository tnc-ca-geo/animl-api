org: animl
app: animl
service: animl-api

plugins:
  # TODO: figure out serverless-offline-sqs
  # - serverless-offline-sqs
  - serverless-offline
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${env:STAGE}
  region: ${env:REGION}
  profile: ${env:AWS_PROFILE}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        - Fn::GetAtt: [ automationQueue, Arn ]
  # Only necessary for private endpoints
  # apiKeys:
  #   - name: lambdaApolloKey
  #     value: ${env:APOLLO_LAMBDA_KEY}

functions:
  graphql:
    handler: src/api/handler.server
    events:
    - http:
        path: /
        method: post
        cors: true
  playground:
    handler: src/api/handler.playground
    events:
    - http:
        path: /
        method: get
        cors: true
  automation:
    handler: src/automation/handler.automation
    reservedConcurrency: 10 # max number of lambdas to invoke at one time
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - automationQueue
              - Arn
          batchSize: 1

resources:
  Resources:
    automationQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: automationQueue